# Default values for bso-project.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: trace-analyzer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

env:
    - name: DOMAIN
      value: grafana.example.com
    - name: EMAIL
      value: test@example.com
    - name: INFLUXDB2_TOKEN
      valueFrom:
        secretKeyRef:
          name: influxdb-auth
          key: admin-token

ingress-nginx:
  controller:
    config:
      enable-opentelemetry: "true"
      opentelemetry-config: "/etc/nginx/opentelemtry.toml"
      opentelemetry-operation-name: "HTTP $request_method $service_name $uri"
      OpentelemetryTrustIncomingSpan: "true"
      otlp-collector-host: "bso-collector-0"
      otlp-collector-port: "4317"
      otel-max-queuesize: "2048"
      otel-schedule-delay-millis: "5000"
      otel-max-export-batch-size: "512"
      otel-service-name: "nginx-proxy"
      otel-sampler: "AlwaysOn"
      otel-sampler-ratio: "1.0"
      otel-sampler-parent-based: "false"
    opentelemetry:
      enabled: true
opentelemetry-collector:
  image:
    repository: otel/opentelemetry-collector-contrib
  mode: statefulset
  enabled: true
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
    exporters:
      influxdb:
        endpoint: "http://bso-influxdb2"
        token: '{{- $influxDBSecret := (lookup "v1" "Secret" .Release.Namespace "influxdb-auth").data }}{{- $influxDBToken := (get $influxDBSecret "admin-token") | b64dec }}{{ $influxDBToken }}'
        metrics_schema: telegraf-prometheus-v2
        bucket: otel
        org: influxdata
        sending_queue:
          enabled: true
          num_consumers: 3
          queue_size: 10
        retry_on_failure:
          enabled: true
          initial_interval: 1s
          max_interval: 3s
          max_elapsed_time: 10s
    service:
      pipelines:
        logs:
          exporters:
            - influxdb
            - debug
          receivers:
            - otlp
          processors:
            - batch
        traces:
          exporters:
            - influxdb
            - debug
          receivers:
            - otlp
          processors:
            - batch
        metrics:
          exporters:
            - influxdb
            - debug
          receivers:
            - otlp
          processors:
            - batch
  presets:
    kubernetesAttributes:
      enabled: true
    kubeletMetrics:
      enabled: true
    logsCollection:
      enabled: true
      includeCollectorLogs: true
opentelemetry-kube-stack:
  opentelemetry-operator:
    enabled: true
    manager:
      collectorImage:
        repository: otel/opentelemetry-collector-contrib
    admissionWebhooks:
      certManager:
        enabled: false
      autoGenerateCert:
        enabled: true
    
    # ports:
    # metrics:
    #   enabled: true
  # podMonitor:
  #   enabled: true
  
  # resources:
  #   limits:
  #     cpu: 500m
  #     memory: 2Gi
  #   requests:
  #     cpu: 200m
  #     memory: 400Mi

influxdb2:
  adminUser:
    organization: influxdata
    bucket: otel
    user: admin
    retentionPolicy: 365d
    token: "testtoken"
    existingSecret: influxdb-auth

grafana:
  envFromSecret: influxdb-auth
  admin:
    existingSecret: "grafana"
    userKey: username
    passwordKey: password
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: InfluxDB
        type: influxdb
        access: proxy
        url: http://bso-influxdb2
        jsonData:
          version: Flux
          organization: influxdata
          defaultBucket: otel
          tlsSkipVerify: true
        secureJsonData:
          token: ${admin-token}
  ingress:
    enabled: true
    hosts:
      - grafana.example.com # templating should work here but I've had some issues :(
    ingressClassName: nginx
  persistance:
    enabled: true
  grafana.ini:
    domain: ${DOMAIN}
    root_url: "%(protocol)s://%(domain)s"
    serve_from_sub_path: true
  # alerting:
  #   rules.yaml:
  #     apiVersion: 1
  #     groups:
  #       - orgId: 1
  #         name: '{{ .Chart.Name }}_group'
  #         interval: 60s
  #         rules:
  #         - uid: my_id_1
  #           title: my_first_rule
  #           condition: A
  #           data:
  #             - refId: A
  #               datasourceUid: '-100'
  #               model:
  #                 datasource:
  #                   type: influxdb
  #                 expression: 1==0
  #                 intervalMs: 1000
  #                 maxDataPoints: 43200
  #                 refId: A
  #                 type: math
  #           dashboardUid: dashboard
  #           panelId: 123
  #           noDataState: Alerting
  #           for: 60s
    contactpoints.yaml:
      - orgId: 1
        name: admin
        receivers:
          - uid: admin
            name: admin
            type: email
            settings:
              addresses:
                - ${EMAIL}